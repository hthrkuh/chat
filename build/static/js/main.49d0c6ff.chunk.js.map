{"version":3,"sources":["components/chat/chat.js","App.jsx","index.jsx"],"names":["socket","io","connect","Chat","props","sendMessage","state","message","length","setErr","emit","name","msg","setMessage","div","document","getElementById","lastChild","setTimeout","scrollIntoView","err","messages","date","Date","toISOString","userId","this","setState","on","data","client","text","className","setMessages","id","map","m","i","style","fontSize","time","type","placeholder","value","onChange","e","target","onClick","React","Component","App","useState","setName","login","setLogin","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49d0c6ff.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './chat.css';\nimport io from 'socket.io-client';\nconst ENDPOINT = \"http://localhost:3050\";\n\n\nconst socket = io.connect(ENDPOINT);\n\nexport class Chat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            err: false,\n            message: \"\",\n            messages: [],\n            date: new Date().toISOString(),\n            userId: \"\"\n        }\n    }\n\n    setErr(err) {\n        this.setState({ err: err })\n    }\n    setMessage(message) {\n        this.setState({ message: message })\n    }\n\n    setMessages(messages) {\n        this.setState({ messages: messages })\n    }\n    sendMessage = () => {\n        if (this.state.message.length === 0) {\n            this.setErr(true);\n            return;\n        }\n        this.setErr(false);\n\n        socket.emit(\"msg-from-client\", { name: this.props.name, msg: this.state.message });\n        this.setMessage('');\n        const div = document.getElementById('messages');\n        if (div.lastChild !== null) {\n            setTimeout(() => {\n                div.lastChild.scrollIntoView();\n            }, 100);\n        }\n    }\n\n    componentDidMount() {\n\n        socket.emit(\"joinRoom\", this.props.name, \"test\");\n        socket.emit(\"userdata\");\n        socket.on(\"userdata\", data => {\n\n            this.setState({ userId: data.userId })\n        });\n        socket.on(\"msg-from-server\", data => {\n\n            if (data.client)\n                data.userId == this.state.userId ?\n                    data.text = <><span className=\"text-primary\">{data.text.name}</span> {\" : \" + data.text.msg} </>\n                    :\n                    data.text = <> {data.text.msg + \" : \"}<span className=\"text-warning\">{data.text.name}</span> </>\n\n            this.setMessages([...this.state.messages, data]);\n        });\n    }\n\n    render() {\n        return (\n            <div className='chat col-md-5 m-auto' >\n                <p>Hello {this.props.name} !</p>\n                <div className='messages' id='messages'>\n                    <div className=\"bg-danger justify-content-center messageDiv sticky-top\" >\n                        <span >{this.state.date}</span>\n                    </div>\n                    {this.state.messages.length !== 0 ?\n                        this.state.messages.map((m, i) =>\n                            <div key={i}>\n\n                                <div className={m.userId == this.state.userId && m.client ? \"messageDiv justify-content-end\" : \"messageDiv\"}>\n\n                                    <p className={m.userId == this.state.userId && m.client ? \"message bg-warning\" : \"message\"}><span className=\"text-dark pe-2\" style={{ fontSize: \"smaller\" }}>{m.time}</span>{m.text}</p>\n                                </div>\n                            </div>\n                        )\n                        : null}\n                </div>\n                {this.state.err ? <p className='err' > You cant send empty message</p> : null}\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter message\" value={this.state.message} onChange={(e) => this.setMessage(e.target.value)} />\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={this.sendMessage}>Send</button>\n                </div>\n            </div >\n        )\n    }\n\n}","import { useState } from 'react';\nimport './App.css';\nimport { Chat } from './components/chat/chat';\n\nfunction App() {\n  const [name, setName] = useState();\n  const [login, setLogin] = useState(false);\n  const [err, setErr] = useState(false);\n\n  const nameValidation = () => {\n    if (!name || name.length < 3) {\n      setErr(true);\n      return;\n    }\n    setErr(false);\n    setLogin(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Online Chat</h1>\n      {!login ?\n        <div className='login'>\n          <p>Enter nickname :</p>\n          {err ?\n            <p className='err'>The nickname must contain at least 3 letters</p> : null}\n          <div className=\"input-group mb-3\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Nickname\" onChange={(e) => setName(e.target.value)} />\n            <button className=\"btn btn-primary\" type=\"button\" onClick={nameValidation}>Enter</button>\n          </div>\n        </div>\n        : <Chat name={name} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// module.exports = <React.StrictMode>\n//   <App />\n// </React.StrictMode>\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}